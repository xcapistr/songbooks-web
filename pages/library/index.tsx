import type { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import { gql } from '@apollo/client'
import axios from 'axios'
import styled from 'styled-components'

import BasicLayout from 'layout/BasicLayout'
import BookCard from 'components/BookCard'
import HeroSection from 'components/HeroSection'
import apolloClient from 'apolloClient'

const List = styled.div`
  display: flex;
  gap: 20px;
  flex-wrap: wrap;
  padding: 40px;
  max-width: 1024px;
  margin: 0 auto;
`

interface Book {
  id: number
  name?: string
  image?: string
  private?: boolean
  stars?: number
  votes?: number
  ownerName?: string
  songsCount?: number
}

interface LibraryProps {
  title: string
  image: string
  smallImage: string
  books: Book[]
}

const Library: NextPage<LibraryProps> = props => {
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <BasicLayout>
        <HeroSection
          title={props.title}
          subtitle=""
          small
          image={props.image}
          smallImage={props.smallImage}
        />
        <List>
          {props.books.map(b => (
            <BookCard
              id={b.id}
              key={b.id}
              title={b.name}
              image={b.image}
              ownerName={b.ownerName}
              songsCount={b.songsCount}
            />
          ))}
        </List>
      </BasicLayout>
    </div>
  )
}

export const getServerSideProps: GetServerSideProps = async ({
  locale = 'en'
}) => {
  const data = (
    await apolloClient.query({
      query: gql`
        query GetLibraryPage {
          Library(id: "library") {
            _id
            title {
              en
              sk
            }
            image {
              asset {
                url
              }
            }
          }
        }
      `
    })
  ).data['Library']

  const apiUrl = process.env.API_URL

  let books: Book[] = []
  const response = await axios.get(`${apiUrl}/users/1/books`)
  if (response.status === 200) {
    books = response.data
  }

  return {
    props: {
      title: data.title[locale],
      image: data.image.asset.url,
      smallImage: `${data.image.asset.url}?w=48`,
      books
    }
  }
}

export default Library
