import { GetServerSideProps, NextPage } from 'next/types'
import Head from 'next/head'
import axios from 'axios'
import { MusicalNote } from 'react-ionicons'
import styled from 'styled-components'

import BasicLayout from 'layout/BasicLayout'
import HeroSection from 'components/HeroSection'

const ContentWrapper = styled.div`
  padding: 40px;
  max-width: 1024px;
  margin: 0 auto;
`

const SongsList = styled.ul`
  list-style: none;
  padding: 0;
`

const SongsListItem = styled.li`
  border-bottom: 1px solid #ccc;
  padding: 20px;
  cursor: pointer;

  &:last-child {
    border-bottom: none;
  }

  &:hover {
    background-color: #eee;
  }

  & > span {
    margin-right: 10px;
  }
`

interface Song {
  id: number
  name?: string
  artistName?: string
}

interface BookProps {
  id?: number
  name?: string
  image?: string
  ownerName?: string
  songs?: Song[]
}

const Book: NextPage<BookProps> = props => {
  const title = props.id
    ? props.name
      ? props.name
      : 'Untitled'
    : 'Song was not found'
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <BasicLayout>
        <HeroSection
          title={title}
          subtitle={`by ${props.ownerName || 'Unknown'}`}
          small
          image={props.image || '/images/grey.jpg'}
          smallImage={'/images/grey-small.jpg'}
        />
        <ContentWrapper>
          <h3>Songs</h3>
          <SongsList>
            {props.songs?.map(s => (
              <SongsListItem key={s.id}>
                <MusicalNote width="18px" height="18px" color={'#666'} />
                {s.name}
              </SongsListItem>
            ))}
          </SongsList>
        </ContentWrapper>
      </BasicLayout>
    </div>
  )
}

export const getServerSideProps: GetServerSideProps = async context => {
  const apiUrl = process.env.API_URL
  const bookId = context.params?.id

  let book: BookProps = {}
  const response = await axios.get(`${apiUrl}/books/${bookId}`)
  if (response.status === 200) {
    book = response.data
  }
  if (!book.id) {
    return { props: {} }
  }
  return {
    props: {
      id: book.id,
      name: book.name,
      image: book.image,
      ownerName: book.ownerName,
      songs: book.songs
    }
  }
}

export default Book
